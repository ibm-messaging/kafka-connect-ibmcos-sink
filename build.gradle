/*
 * Copyright 2019, 2021 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
plugins {
  id 'com.github.johnrengelman.shadow' version '6.1.0'
  id 'java'
  id 'eclipse'
  id 'jacoco'
  id 'org.sonarqube' version '2.7.1'
}

repositories {
   mavenCentral()
   jcenter()
   maven {
     url "https://packages.confluent.io/maven/"
   }
}

dependencies {
  implementation 'com.eclipsesource.minimal-json:minimal-json:0.9.5'
  implementation 'com.ibm.cos:ibm-cos-java-sdk:2.9.1'
  implementation 'org.apache.kafka:connect-api:2.2.1'
  implementation group: 'org.apache.avro', name: 'avro', version: '1.10.2'
  implementation (group: 'io.confluent', name: 'kafka-connect-avro-converter', version: '5.5.2') {
      exclude group: 'org.apache.avro', module: 'avro'
  }
  implementation (group: 'org.apache.parquet', name: 'parquet-avro', version: '1.11.0') {
      exclude group: 'org.apache.avro', module: 'avro'
  }
  implementation (group: 'org.apache.hadoop', name: 'hadoop-common', version: '3.3.1') {
      exclude group: 'org.apache.avro', module: 'avro'
  }
  implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'

  testImplementation "org.mockito:mockito-core:3.+"
  testImplementation 'junit:junit:4.12'
  testImplementation 'com.squareup.okhttp3:mockwebserver:3.9.+'
}

eclipse{
  project {
    natures 'org.springsource.ide.eclipse.gradle.core.nature'
  }
  classpath {
      defaultOutputDir = file('build')
      file {
      whenMerged {
        def lib = entries.find { it.path.contains 'kafka-connect-avro-data-5.5.2.jar'}
        lib.sourcePath = fileReference(file('libs/kafka-connect-avro-data-5.5.2-sources.jar'))
      }
    }
  }
}


shadowJar {
   archiveClassifier.set('all')
   archiveVersion.set('1.0.0')
}


test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
      xml.enabled true
    }
}

allprojects {
    tasks.register("downloadDependencies", Copy) { Copy copy ->
        copy.into project.layout.buildDirectory.dir("dependencies")
        copy.from {
            configurations.matching { Configuration c ->
                c.isCanBeResolved()
            }.collect { Configuration c ->
                c.resolve()
            }.flatten().unique()
        }
    }
}
